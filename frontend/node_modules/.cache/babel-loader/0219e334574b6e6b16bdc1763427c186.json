{"ast":null,"code":"import _objectSpread from \"/home/giriprasath/Downloads/matx-react/matx-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/giriprasath/Downloads/matx-react/matx-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/giriprasath/Downloads/matx-react/matx-react/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grow from \"@material-ui/core/Grow\";\n\nfunction SlideTransition(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction GrowTransition(props) {\n  return /*#__PURE__*/React.createElement(Grow, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function TransitionsSnackbar() {\n  const _React$useState = React.useState({\n    open: false,\n    Transition: Fade\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleClick = Transition => () => {\n    setState({\n      open: true,\n      Transition\n    });\n  };\n\n  function handleClose() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(GrowTransition),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Grow Transition\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(Fade),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Fade Transition\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(SlideTransition),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Slide Transition\"), /*#__PURE__*/React.createElement(Snackbar, {\n    open: state.open,\n    onClose: handleClose,\n    TransitionComponent: state.Transition,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/app/views/material-kit/snackbar/TransitionSnackbar.jsx"],"names":["React","Button","Snackbar","Fade","Slide","Grow","SlideTransition","props","GrowTransition","TransitionsSnackbar","useState","open","Transition","state","setState","handleClick","handleClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,sBAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASC,cAAT,CAAwBD,KAAxB,EAA+B;AAC7B,sBAAO,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,eAAe,SAASE,mBAAT,GAA+B;AAAA,0BAClBT,KAAK,CAACU,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAE,KADiC;AAEvCC,IAAAA,UAAU,EAAET;AAF2B,GAAf,CADkB;AAAA;AAAA,QACrCU,KADqC;AAAA,QAC9BC,QAD8B;;AAM5C,QAAMC,WAAW,GAAGH,UAAU,IAAI,MAAM;AACtCE,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;;AAOA,WAASI,WAAT,GAAuB;AACrBF,IAAAA,QAAQ,iCACHD,KADG;AAENF,MAAAA,IAAI,EAAE;AAFA,OAAR;AAID;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,WAAW,CAACP,cAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,WAAW,CAACZ,IAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,WAAW,CAACT,eAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEO,KAAK,CAACF,IADd;AAEE,IAAA,OAAO,EAAEK,WAFX;AAGE,IAAA,mBAAmB,EAAEH,KAAK,CAACD,UAH7B;AAIE,IAAA,YAAY,EAAE;AACZ,0BAAoB;AADR,KAJhB;AAOE,IAAA,OAAO,eAAE;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAgBD","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grow from \"@material-ui/core/Grow\";\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade\n  });\n\n  const handleClick = Transition => () => {\n    setState({\n      open: true,\n      Transition\n    });\n  };\n\n  function handleClose() {\n    setState({\n      ...state,\n      open: false\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}