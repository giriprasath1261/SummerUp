{"ast":null,"code":"import _objectSpread from \"/home/giriprasath/Downloads/matx-react/matx-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/giriprasath/Downloads/matx-react/matx-react/src/app/MatxLayout/SharedCompoents/Sidenav.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nclass Sidenav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.updateSidebarMode = sidebarSettings => {\n      let _this$props = this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings;\n      let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n      let activeLayoutSettings = settings[activeLayoutSettingsName];\n      setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, {\n        [activeLayoutSettingsName]: _objectSpread(_objectSpread({}, activeLayoutSettings), {}, {\n          leftSidebar: _objectSpread(_objectSpread({}, activeLayoutSettings.leftSidebar), sidebarSettings)\n        })\n      }));\n    };\n\n    this.renderOverlay = () => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.updateSidebarMode({\n        mode: \"close\"\n      }),\n      className: \"sidenav__overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Scrollbar, {\n      option: {\n        suppressScrollX: true\n      },\n      className: \"scrollable position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, this.props.children, /*#__PURE__*/React.createElement(MatxVerticalNav, {\n      navigation: navigations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })), this.renderOverlay());\n  }\n\n}\n\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings\n})(Sidenav));","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/app/MatxLayout/SharedCompoents/Sidenav.jsx"],"names":["React","Component","Fragment","Scrollbar","withRouter","connect","PropTypes","navigations","MatxVerticalNav","setLayoutSettings","Sidenav","state","updateSidebarMode","sidebarSettings","props","settings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","renderOverlay","mode","render","suppressScrollX","children","propTypes","func","isRequired","object","mapStateToProps","layout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,eAAT,QAAgC,MAAhC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BU,KAD8B,GACtB,EADsB;;AAAA,SAG9BC,iBAH8B,GAGVC,eAAe,IAAI;AAAA,wBACC,KAAKC,KADN;AAAA,UAC/BC,QAD+B,eAC/BA,QAD+B;AAAA,UACrBN,iBADqB,eACrBA,iBADqB;AAErC,UAAIO,wBAAwB,GAAGD,QAAQ,CAACE,YAAT,GAAsB,UAArD;AACA,UAAIC,oBAAoB,GAAGH,QAAQ,CAACC,wBAAD,CAAnC;AAEAP,MAAAA,iBAAiB,iCACZM,QADY;AAEf,SAACC,wBAAD,mCACKE,oBADL;AAEEC,UAAAA,WAAW,kCACND,oBAAoB,CAACC,WADf,GAENN,eAFM;AAFb;AAFe,SAAjB;AAUD,KAlB6B;;AAAA,SAoB9BO,aApB8B,GAoBd,mBACd;AACE,MAAA,OAAO,EAAE,MAAM,KAAKR,iBAAL,CAAuB;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAvB,CADjB;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArB4B;AAAA;;AA0B9BC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAAnB;AAA4C,MAAA,SAAS,EAAC,8BAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWU,QADd,eAEE,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAEjB,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKG,KAAKa,aAAL,EALH,CADF;AASD;;AApC6B;;AAsChCV,OAAO,CAACe,SAAR,GAAoB;AAClBhB,EAAAA,iBAAiB,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UADhB;AAElBZ,EAAAA,QAAQ,EAAET,SAAS,CAACsB,MAAV,CAAiBD;AAFT,CAApB;;AAIA,MAAME,eAAe,GAAGlB,KAAK,KAAK;AAChCF,EAAAA,iBAAiB,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UADF;AAEhCZ,EAAAA,QAAQ,EAAEJ,KAAK,CAACmB,MAAN,CAAaf;AAFS,CAAL,CAA7B;;AAIA,eAAeX,UAAU,CACvBC,OAAO,CACLwB,eADK,EAEL;AACEpB,EAAAA;AADF,CAFK,CAAP,CAKEC,OALF,CADuB,CAAzB","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nclass Sidenav extends Component {\n  state = {};\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    let activeLayoutSettingsName = settings.activeLayout+\"Settings\";\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    setLayoutSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  renderOverlay = () => (\n    <div\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\n      className=\"sidenav__overlay\"\n    />\n  );\n  render() {\n    return (\n      <Fragment>\n        <Scrollbar option={{suppressScrollX: true}} className=\"scrollable position-relative\">\n          {this.props.children}\n          <MatxVerticalNav navigation={navigations} />\n        </Scrollbar>\n        {this.renderOverlay()}\n      </Fragment>\n    );\n  }\n}\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      setLayoutSettings\n    }\n  )(Sidenav)\n);"]},"metadata":{},"sourceType":"module"}