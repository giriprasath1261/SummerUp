{"ast":null,"code":"import _objectSpread from \"/home/giriprasath/Downloads/matx-react/matx-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport jwtAuthService from \"../../services/jwtAuthService\";\nimport FirebaseAuthService from \"../../services/firebase/firebaseAuthService\";\nimport { setUserData } from \"./UserActions\";\nimport history from \"history.js\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\nexport function loginWithEmailAndPassword({\n  email,\n  password\n}) {\n  return dispatch => {\n    dispatch({\n      type: LOGIN_LOADING\n    });\n    jwtAuthService.loginWithEmailAndPassword(email, password).then(user => {\n      dispatch(setUserData(user));\n      history.push({\n        pathname: \"/\"\n      });\n      return dispatch({\n        type: LOGIN_SUCCESS\n      });\n    }).catch(error => {\n      return dispatch({\n        type: LOGIN_ERROR,\n        payload: error\n      });\n    });\n  };\n}\nexport function resetPassword({\n  email\n}) {\n  return dispatch => {\n    dispatch({\n      payload: email,\n      type: RESET_PASSWORD\n    });\n  };\n}\nexport function firebaseLoginEmailPassword({\n  email,\n  password\n}) {\n  return dispatch => {\n    FirebaseAuthService.signInWithEmailAndPassword(email, password).then(user => {\n      if (user) {\n        dispatch(setUserData(_objectSpread({\n          userId: \"1\",\n          role: \"ADMIN\",\n          displayName: \"Watson Joyce\",\n          email: \"watsonjoyce@gmail.com\",\n          photoURL: \"/assets/images/face-7.jpg\",\n          age: 25,\n          token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\"\n        }, user)));\n        history.push({\n          pathname: \"/\"\n        });\n        return dispatch({\n          type: LOGIN_SUCCESS\n        });\n      } else {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: \"Login Failed\"\n        });\n      }\n    }).catch(error => {\n      return dispatch({\n        type: LOGIN_ERROR,\n        payload: error\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/app/redux/actions/LoginActions.js"],"names":["jwtAuthService","FirebaseAuthService","setUserData","history","LOGIN_ERROR","LOGIN_SUCCESS","LOGIN_LOADING","RESET_PASSWORD","loginWithEmailAndPassword","email","password","dispatch","type","then","user","push","pathname","catch","error","payload","resetPassword","firebaseLoginEmailPassword","signInWithEmailAndPassword","userId","role","displayName","photoURL","age","token"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,SAASC,yBAAT,CAAmC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnC,EAAwD;AAC7D,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIAN,IAAAA,cAAc,CACXQ,yBADH,CAC6BC,KAD7B,EACoCC,QADpC,EAEGG,IAFH,CAEQC,IAAI,IAAI;AACZH,MAAAA,QAAQ,CAACT,WAAW,CAACY,IAAD,CAAZ,CAAR;AAEAX,MAAAA,OAAO,CAACY,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAE;AADC,OAAb;AAIA,aAAOL,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEP;AADQ,OAAD,CAAf;AAGD,KAZH,EAaGY,KAbH,CAaSC,KAAK,IAAI;AACd,aAAOP,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAER,WADQ;AAEde,QAAAA,OAAO,EAAED;AAFK,OAAD,CAAf;AAID,KAlBH;AAmBD,GAxBD;AAyBD;AAED,OAAO,SAASE,aAAT,CAAuB;AAAEX,EAAAA;AAAF,CAAvB,EAAkC;AACvC,SAAOE,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,OAAO,EAAEV,KADF;AAEPG,MAAAA,IAAI,EAAEL;AAFC,KAAD,CAAR;AAID,GALD;AAMD;AAED,OAAO,SAASc,0BAAT,CAAoC;AAAEZ,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApC,EAAyD;AAC9D,SAAOC,QAAQ,IAAI;AACjBV,IAAAA,mBAAmB,CAACqB,0BAApB,CAA+Cb,KAA/C,EAAsDC,QAAtD,EACGG,IADH,CACQC,IAAI,IAAI;AACZ,UAAIA,IAAJ,EAAU;AACRH,QAAAA,QAAQ,CACNT,WAAW;AACTqB,UAAAA,MAAM,EAAE,GADC;AAETC,UAAAA,IAAI,EAAE,OAFG;AAGTC,UAAAA,WAAW,EAAE,cAHJ;AAIThB,UAAAA,KAAK,EAAE,uBAJE;AAKTiB,UAAAA,QAAQ,EAAE,2BALD;AAMTC,UAAAA,GAAG,EAAE,EANI;AAOTC,UAAAA,KAAK,EAAE;AAPE,WAQNd,IARM,EADL,CAAR;AAaAX,QAAAA,OAAO,CAACY,IAAR,CAAa;AACXC,UAAAA,QAAQ,EAAE;AADC,SAAb;AAIA,eAAOL,QAAQ,CAAC;AACdC,UAAAA,IAAI,EAAEP;AADQ,SAAD,CAAf;AAGD,OArBD,MAqBO;AACL,eAAOM,QAAQ,CAAC;AACdC,UAAAA,IAAI,EAAER,WADQ;AAEde,UAAAA,OAAO,EAAE;AAFK,SAAD,CAAf;AAID;AACF,KA7BH,EA8BGF,KA9BH,CA8BSC,KAAK,IAAI;AACd,aAAOP,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAER,WADQ;AAEde,QAAAA,OAAO,EAAED;AAFK,OAAD,CAAf;AAID,KAnCH;AAoCD,GArCD;AAsCD","sourcesContent":["import jwtAuthService from \"../../services/jwtAuthService\";\nimport FirebaseAuthService from \"../../services/firebase/firebaseAuthService\";\nimport { setUserData } from \"./UserActions\";\nimport history from \"history.js\";\n\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport function loginWithEmailAndPassword({ email, password }) {\n  return dispatch => {\n    dispatch({\n      type: LOGIN_LOADING\n    });\n\n    jwtAuthService\n      .loginWithEmailAndPassword(email, password)\n      .then(user => {\n        dispatch(setUserData(user));\n\n        history.push({\n          pathname: \"/\"\n        });\n\n        return dispatch({\n          type: LOGIN_SUCCESS\n        });\n      })\n      .catch(error => {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: error\n        });\n      });\n  };\n}\n\nexport function resetPassword({ email }) {\n  return dispatch => {\n    dispatch({\n      payload: email,\n      type: RESET_PASSWORD\n    });\n  };\n}\n\nexport function firebaseLoginEmailPassword({ email, password }) {\n  return dispatch => {\n    FirebaseAuthService.signInWithEmailAndPassword(email, password)\n      .then(user => {\n        if (user) {\n          dispatch(\n            setUserData({\n              userId: \"1\",\n              role: \"ADMIN\",\n              displayName: \"Watson Joyce\",\n              email: \"watsonjoyce@gmail.com\",\n              photoURL: \"/assets/images/face-7.jpg\",\n              age: 25,\n              token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\",\n              ...user\n            })\n          );\n\n          history.push({\n            pathname: \"/\"\n          });\n\n          return dispatch({\n            type: LOGIN_SUCCESS\n          });\n        } else {\n          return dispatch({\n            type: LOGIN_ERROR,\n            payload: \"Login Failed\"\n          });\n        }\n      })\n      .catch(error => {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: error\n        });\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}