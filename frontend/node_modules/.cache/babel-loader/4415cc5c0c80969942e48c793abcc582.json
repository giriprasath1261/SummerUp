{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InfoBox = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _InfoBox$contextTypes;\n\nvar _canUseDom = require(\"can-use-dom\");\n\nvar _canUseDom2 = _interopRequireDefault(_canUseDom);\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MapChildHelper = require(\"../../utils/MapChildHelper\");\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A wrapper around `InfoBox`\n *\n * @see http://htmlpreview.github.io/?https://github.com/googlemaps/v3-utility-library/blob/master/infobox/docs/reference.html\n */\n\n\nvar InfoBox = exports.InfoBox = function (_React$PureComponent) {\n  ;\n  (0, _inherits3.default)(InfoBox, _React$PureComponent);\n\n  function InfoBox() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, InfoBox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = InfoBox.__proto__ || (0, _getPrototypeOf2.default)(InfoBox)).call.apply(_ref, [this].concat(args))), _this), _this.state = (0, _defineProperty3.default)({}, _constants.INFO_BOX, null), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  ;\n  (0, _createClass3.default)(InfoBox, [{\n    key: \"componentWillMount\",\n\n    /*\n    * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#InfoBox\n    */\n    value: function componentWillMount() {\n      if (!_canUseDom2.default || this.state[_constants.INFO_BOX]) {\n        return;\n      }\n\n      var _require = require(\n      /* \"google-maps-infobox\" uses \"google\" as a global variable. Since we don't\n      * have \"google\" on the server, we can not use it in server-side rendering.\n      * As a result, we import \"google-maps-infobox\" here to prevent an error on\n      * a isomorphic server.\n      */\n      \"google-maps-infobox\"),\n          GoogleMapsInfobox = _require.InfoBox;\n\n      var infoBox = new GoogleMapsInfobox();\n      (0, _MapChildHelper.construct)(InfoBox.propTypes, updaterMap, this.props, infoBox);\n      infoBox.setMap(this.context[_constants.MAP]);\n      this.setState((0, _defineProperty3.default)({}, _constants.INFO_BOX, infoBox));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n      (0, _MapChildHelper.componentDidMount)(this, this.state[_constants.INFO_BOX], eventMap);\n      var content = document.createElement(\"div\");\n\n      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react2.default.Children.only(this.props.children), content);\n\n      this.state[_constants.INFO_BOX].setContent(content);\n\n      open(this.state[_constants.INFO_BOX], this.context[_constants.ANCHOR]);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      ;\n      (0, _MapChildHelper.componentDidUpdate)(this, this.state[_constants.INFO_BOX], eventMap, updaterMap, prevProps);\n\n      if (this.props.children !== prevProps.children) {\n        _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react2.default.Children.only(this.props.children), this.state[_constants.INFO_BOX].getContent());\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ;\n      (0, _MapChildHelper.componentWillUnmount)(this);\n      var infoBox = this.state[_constants.INFO_BOX];\n\n      if (infoBox) {\n        if (infoBox.getContent()) {\n          _reactDom2.default.unmountComponentAtNode(infoBox.getContent());\n        }\n\n        infoBox.setMap(null);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return false;\n    }\n    /**\n     *\n     * @type LatLng\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.state[_constants.INFO_BOX].getPosition();\n    }\n    /**\n     *\n     * @type boolean\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      return this.state[_constants.INFO_BOX].getVisible();\n    }\n    /**\n     *\n     * @type number\n     */\n\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      return this.state[_constants.INFO_BOX].getZIndex();\n    }\n  }]);\n  return InfoBox;\n}(_react2.default.PureComponent);\n\nInfoBox.propTypes = {\n  /**\n   * @type InfoBoxOptions\n   */\n  defaultOptions: _propTypes2.default.any,\n\n  /**\n   * @type LatLng|LatLngLiteral\n   */\n  defaultPosition: _propTypes2.default.any,\n\n  /**\n   * @type boolean\n   */\n  defaultVisible: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultZIndex: _propTypes2.default.number,\n\n  /**\n   * @type InfoBoxOptions\n   */\n  options: _propTypes2.default.any,\n\n  /**\n   * @type LatLng|LatLngLiteral\n   */\n  position: _propTypes2.default.any,\n\n  /**\n   * @type boolean\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  zIndex: _propTypes2.default.number,\n\n  /**\n   * function\n   */\n  onCloseClick: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onDomReady: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onContentChanged: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onPositionChanged: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onZindexChanged: _propTypes2.default.func\n};\nInfoBox.contextTypes = (_InfoBox$contextTypes = {}, (0, _defineProperty3.default)(_InfoBox$contextTypes, _constants.MAP, _propTypes2.default.object), (0, _defineProperty3.default)(_InfoBox$contextTypes, _constants.ANCHOR, _propTypes2.default.object), _InfoBox$contextTypes);\nexports.default = InfoBox;\n\nvar open = function open(infoBox, anchor) {\n  if (anchor) {\n    infoBox.open(infoBox.getMap(), anchor);\n  } else if (infoBox.getPosition()) {\n    infoBox.open(infoBox.getMap());\n  } else {\n    ;\n    (0, _invariant2.default)(false, \"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoBox>.\");\n  }\n};\n\nvar eventMap = {\n  onCloseClick: \"closeclick\",\n  onDomReady: \"domready\",\n  onContentChanged: \"content_changed\",\n  onPositionChanged: \"position_changed\",\n  onZindexChanged: \"zindex_changed\"\n};\nvar updaterMap = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}