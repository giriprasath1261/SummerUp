{"ast":null,"code":"import axios from \"axios\";\nexport const GET_ALL_BOARD = \"GET_ALL_BOARD\";\nexport const GET_BOARD_BY_ID = \"GET_BOARD_BY_ID\";\nexport const ADD_BOARD = \"ADD_BOARD\";\nexport const ADD_MEMBER_IN_BOARD = \"ADD_MEMBER_IN_BOARD\";\nexport const DELETE_MEMBER_FROM_BOARD = \"DELETE_MEMBER_FROM_BOARD\";\nexport const GET_ALL_MEMBERS = \"GET_ALL_MEMBERS\";\nexport const GET_ALL_LABELS = \"GET_ALL_LABELS\";\nexport const ADD_LIST = \"ADD_LIST\";\nexport const RENAME_LIST = \"RENAME_LIST\";\nexport const REORDER_LIST = \"REORDER_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\nexport const ADD_CARD = \"ADD_CARD\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const REORDER_CARD = \"REORDER_CARD\";\nexport const REORDER_CARD_LIST = \"REORDER_CARD_LIST\";\nexport const MOVE_CARD = \"MOVE_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const getAllMembers = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-member\").then(res => {\n      dispatch({\n        type: GET_ALL_MEMBERS,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getAllLabels = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-label\").then(res => {\n      dispatch({\n        type: GET_ALL_LABELS,\n        payload: res.data\n      });\n    });\n  };\n}; // BOARD RELATED ACTIONS\n\nexport const getAllBoard = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-board\").then(res => {\n      dispatch({\n        type: GET_ALL_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addNewBoard = boardTitle => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/add-board\", boardTitle).then(res => {\n      dispatch({\n        type: ADD_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getBoardById = id => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board\", {\n      data: id\n    }).then(res => {\n      dispatch({\n        type: GET_BOARD_BY_ID,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addMemberInBoard = ({\n  boardId,\n  memberId\n}) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/add-member\", {\n      boardId,\n      memberId\n    }).then(res => {\n      dispatch({\n        type: ADD_MEMBER_IN_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const deleteMemberFromBoard = ({\n  boardId,\n  memberId\n}) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/delete-member\", {\n      boardId,\n      memberId\n    }).then(res => {\n      dispatch({\n        type: DELETE_MEMBER_FROM_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addListInBoard = ({\n  boardId,\n  listTitle\n}) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/add-column\", {\n      boardId,\n      listTitle\n    }).then(res => {\n      dispatch({\n        type: ADD_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const renameListInBoard = ({\n  boardId,\n  listTitle,\n  listId\n}) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/rename-column\", {\n      boardId,\n      listTitle,\n      listId\n    }).then(res => {\n      dispatch({\n        type: RENAME_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reorderList = (boardId, startIndex, endIndex) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/reorder-list\", {\n      boardId,\n      startIndex,\n      endIndex\n    }).then(res => {\n      dispatch({\n        type: REORDER_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const deleteListFromBoard = ({\n  boardId,\n  listId\n}) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/delete-column\", {\n      boardId,\n      listId\n    }).then(res => {\n      dispatch({\n        type: DELETE_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addNewCardInList = ({\n  listId,\n  boardId,\n  cardTitle\n}) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/add-card\", {\n      listId,\n      boardId,\n      cardTitle\n    }).then(res => {\n      dispatch({\n        type: ADD_CARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reorderCardInList = (boardId, listId, startIndex, endIndex) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/reorder-card\", {\n      boardId,\n      listId,\n      startIndex,\n      endIndex\n    }).then(res => {\n      dispatch({\n        type: REORDER_CARD_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const moveCardInList = (boardId, sourcelistId, destinationlistId, source, destination) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/move-card\", {\n      boardId,\n      sourcelistId,\n      destinationlistId,\n      source,\n      destination\n    }).then(res => {\n      dispatch({\n        type: MOVE_CARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const updateCardInList = (boardId, listId, card) => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/update-card\", {\n      boardId,\n      listId,\n      card\n    }).then(res => {\n      dispatch({\n        type: UPDATE_CARD,\n        payload: res.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/app/redux/actions/ScrumBoardActions.js"],"names":["axios","GET_ALL_BOARD","GET_BOARD_BY_ID","ADD_BOARD","ADD_MEMBER_IN_BOARD","DELETE_MEMBER_FROM_BOARD","GET_ALL_MEMBERS","GET_ALL_LABELS","ADD_LIST","RENAME_LIST","REORDER_LIST","DELETE_LIST","ADD_CARD","UPDATE_CARD","REORDER_CARD","REORDER_CARD_LIST","MOVE_CARD","DELETE_CARD","getAllMembers","dispatch","get","then","res","type","payload","data","getAllLabels","getAllBoard","addNewBoard","boardTitle","post","getBoardById","id","addMemberInBoard","boardId","memberId","deleteMemberFromBoard","addListInBoard","listTitle","renameListInBoard","listId","reorderList","startIndex","endIndex","deleteListFromBoard","addNewCardInList","cardTitle","reorderCardInList","moveCardInList","sourcelistId","destinationlistId","source","destination","updateCardInList","card"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const GET_ALL_BOARD = \"GET_ALL_BOARD\";\nexport const GET_BOARD_BY_ID = \"GET_BOARD_BY_ID\";\nexport const ADD_BOARD = \"ADD_BOARD\";\nexport const ADD_MEMBER_IN_BOARD = \"ADD_MEMBER_IN_BOARD\";\nexport const DELETE_MEMBER_FROM_BOARD = \"DELETE_MEMBER_FROM_BOARD\";\nexport const GET_ALL_MEMBERS = \"GET_ALL_MEMBERS\";\nexport const GET_ALL_LABELS = \"GET_ALL_LABELS\";\n\nexport const ADD_LIST = \"ADD_LIST\";\nexport const RENAME_LIST = \"RENAME_LIST\";\nexport const REORDER_LIST = \"REORDER_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\n\nexport const ADD_CARD = \"ADD_CARD\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const REORDER_CARD = \"REORDER_CARD\";\nexport const REORDER_CARD_LIST = \"REORDER_CARD_LIST\";\nexport const MOVE_CARD = \"MOVE_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\n\nexport const getAllMembers = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-member\").then(res => {\n      dispatch({\n        type: GET_ALL_MEMBERS,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const getAllLabels = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-label\").then(res => {\n      dispatch({\n        type: GET_ALL_LABELS,\n        payload: res.data\n      });\n    });\n  };\n};\n\n// BOARD RELATED ACTIONS\nexport const getAllBoard = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-board\").then(res => {\n      dispatch({\n        type: GET_ALL_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const addNewBoard = boardTitle => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/add-board\", boardTitle).then(res => {\n      dispatch({\n        type: ADD_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const getBoardById = id => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board\", { data: id }).then(res => {\n      dispatch({\n        type: GET_BOARD_BY_ID,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const addMemberInBoard = ({ boardId, memberId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/add-member\", { boardId, memberId })\n      .then(res => {\n        dispatch({\n          type: ADD_MEMBER_IN_BOARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const deleteMemberFromBoard = ({ boardId, memberId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/delete-member\", { boardId, memberId })\n      .then(res => {\n        dispatch({\n          type: DELETE_MEMBER_FROM_BOARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const addListInBoard = ({ boardId, listTitle }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/add-column\", { boardId, listTitle })\n      .then(res => {\n        dispatch({\n          type: ADD_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const renameListInBoard = ({ boardId, listTitle, listId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/rename-column\", { boardId, listTitle, listId })\n      .then(res => {\n        dispatch({\n          type: RENAME_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const reorderList = (boardId, startIndex, endIndex) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/reorder-list\", { boardId, startIndex, endIndex })\n      .then(res => {\n        dispatch({\n          type: REORDER_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const deleteListFromBoard = ({ boardId, listId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/delete-column\", { boardId, listId })\n      .then(res => {\n        dispatch({\n          type: DELETE_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const addNewCardInList = ({ listId, boardId, cardTitle }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/add-card\", { listId, boardId, cardTitle })\n      .then(res => {\n        dispatch({\n          type: ADD_CARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const reorderCardInList = (boardId, listId, startIndex, endIndex) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/reorder-card\", {\n        boardId,\n        listId,\n        startIndex,\n        endIndex\n      })\n      .then(res => {\n        dispatch({\n          type: REORDER_CARD_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const moveCardInList = (\n  boardId,\n  sourcelistId,\n  destinationlistId,\n  source,\n  destination\n) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/move-card\", {\n        boardId,\n        sourcelistId,\n        destinationlistId,\n        source,\n        destination\n      })\n      .then(res => {\n        dispatch({\n          type: MOVE_CARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const updateCardInList = (boardId, listId, card) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/update-card\", { boardId, listId, card })\n      .then(res => {\n        dispatch({\n          type: UPDATE_CARD,\n          payload: res.data\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}