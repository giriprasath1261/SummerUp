{"ast":null,"code":"import _slicedToArray from \"/home/giriprasath/Downloads/matx-react/matx-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/giriprasath/Downloads/matx-react/matx-react/src/app/views/material-kit/AppProgress.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst AppProgress = () => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        completed = _React$useState2[0],\n        setCompleted = _React$useState2[1];\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: \"Material\",\n      path: \"/material\"\n    }, {\n      name: \"Prgress\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Circuar Progress (Indeterminate)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.progress,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Circuar Progress (static)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: 25,\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: 50,\n    className: classes.progress,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: 75,\n    className: classes.progress,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Linear Progress (Indeterminate)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Linear Progress (Determinate)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"secondary\",\n    variant: \"determinate\",\n    value: completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AppProgress;","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/app/views/material-kit/AppProgress.jsx"],"names":["React","makeStyles","LinearProgress","CircularProgress","Breadcrumb","SimpleCard","useStyles","theme","root","flexGrow","progress","margin","spacing","AppProgress","classes","useState","completed","setCompleted","useEffect","oldCompleted","diff","Math","random","min","timer","setInterval","clearInterval","name","path"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst AppProgress = () => {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Prgress\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"Circuar Progress (Indeterminate)\">\n        <CircularProgress className={classes.progress} />\n        <CircularProgress className={classes.progress} color=\"secondary\" />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Circuar Progress (static)\">\n        <CircularProgress\n          variant=\"static\"\n          value={25}\n          className={classes.progress}\n        />\n        <CircularProgress\n          variant=\"static\"\n          value={50}\n          className={classes.progress}\n          color=\"secondary\"\n        />\n        <CircularProgress\n          variant=\"static\"\n          value={75}\n          className={classes.progress}\n          color=\"secondary\"\n        />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Linear Progress (Indeterminate)\">\n        <LinearProgress />\n        <br />\n        <LinearProgress color=\"secondary\" />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Linear Progress (Determinate)\">\n        <LinearProgress variant=\"determinate\" value={completed} />\n        <br />\n        <LinearProgress\n          color=\"secondary\"\n          variant=\"determinate\"\n          value={completed}\n        />\n      </SimpleCard>\n    </div>\n  );\n};\nexport default AppProgress;\n"]},"metadata":{},"sourceType":"module"}