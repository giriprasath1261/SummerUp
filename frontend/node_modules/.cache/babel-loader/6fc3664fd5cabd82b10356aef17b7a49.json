{"ast":null,"code":"var _jsxFileName = \"/home/giriprasath/Downloads/matx-react/matx-react/src/app/views/material-kit/forms/SimpleForm.jsx\";\nimport React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Button, Icon, Grid, Radio, RadioGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass SimpleForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      firstName: \"\",\n      email: \"\",\n      date: new Date(),\n      creditCard: \"\",\n      mobile: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      gender: \"\",\n      agreement: \"\"\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"submitted\");\n      console.log(event);\n    };\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleDateChange = date => {\n      console.log(date);\n      this.setState({\n        date\n      });\n    };\n  }\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n  }\n\n  render() {\n    let _this$state = this.state,\n        username = _this$state.username,\n        firstName = _this$state.firstName,\n        creditCard = _this$state.creditCard,\n        mobile = _this$state.mobile,\n        password = _this$state.password,\n        confirmPassword = _this$state.confirmPassword,\n        gender = _this$state.gender,\n        date = _this$state.date,\n        email = _this$state.email;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      onError: errors => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 6,\n      md: 6,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Username (Min length 4, Max length 9)\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      validators: [\"required\", \"minStringLength: 4\", \"maxStringLength: 9\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"First Name\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"firstName\",\n      value: firstName,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Email\",\n      onChange: this.handleChange,\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      validators: [\"required\", \"isEmail\"],\n      errorMessages: [\"this field is required\", \"email is not valid\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: \"mb-16 w-100\",\n      margin: \"none\",\n      id: \"mui-pickers-date\",\n      label: \"Date picker\",\n      inputVariant: \"standard\",\n      type: \"text\",\n      autoOk: true,\n      value: date,\n      onChange: this.handleDateChange,\n      KeyboardButtonProps: {\n        \"aria-label\": \"change date\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-32 w-100\",\n      label: \"Credit Card\",\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"creditCard\",\n      value: creditCard,\n      validators: [\"required\", \"minStringLength:16\", \"maxStringLength: 16\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 6,\n      md: 6,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Mobile Nubmer\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"mobile\",\n      value: mobile,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Password\",\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"mb-16 w-100\",\n      label: \"Confirm Password\",\n      onChange: this.handleChange,\n      name: \"confirmPassword\",\n      type: \"password\",\n      value: confirmPassword,\n      validators: [\"required\", \"isPasswordMatch\"],\n      errorMessages: [\"this field is required\", \"password didn't match\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(RadioGroup, {\n      className: \"mb-16\",\n      value: gender,\n      name: \"gender\",\n      onChange: this.handleChange,\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"Male\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 28\n        }\n      }),\n      label: \"Male\",\n      labelPlacement: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"Female\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 28\n        }\n      }),\n      label: \"Female\",\n      labelPlacement: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"Others\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 28\n        }\n      }),\n      label: \"Others\",\n      labelPlacement: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 26\n        }\n      }),\n      label: \"I have read and agree to the terms of service.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \"send\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pl-8 capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"Send\"))));\n  }\n\n}\n\nexport default SimpleForm;","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/app/views/material-kit/forms/SimpleForm.jsx"],"names":["React","Component","ValidatorForm","TextValidator","Button","Icon","Grid","Radio","RadioGroup","FormControlLabel","Checkbox","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","SimpleForm","state","username","firstName","email","date","Date","creditCard","mobile","password","confirmPassword","gender","agreement","handleSubmit","event","console","log","handleChange","persist","setState","target","name","value","handleDateChange","componentDidMount","addValidationRule","componentWillUnmount","removeValidationRule","render","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass SimpleForm extends Component {\n  state = {\n    username: \"\",\n    firstName: \"\",\n    email: \"\",\n    date: new Date(),\n    creditCard: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    gender: \"\",\n    agreement: \"\"\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n  }\n\n  handleSubmit = event => {\n    console.log(\"submitted\");\n    console.log(event);\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleDateChange = date => {\n    console.log(date);\n\n    this.setState({ date });\n  };\n\n  render() {\n    let {\n      username,\n      firstName,\n      creditCard,\n      mobile,\n      password,\n      confirmPassword,\n      gender,\n      date,\n      email\n    } = this.state;\n    return (\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Username (Min length 4, Max length 9)\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                validators={[\n                  \"required\",\n                  \"minStringLength: 4\",\n                  \"maxStringLength: 9\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"First Name\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Email\"\n                onChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                validators={[\"required\", \"isEmail\"]}\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\n              />\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  className=\"mb-16 w-100\"\n                  margin=\"none\"\n                  id=\"mui-pickers-date\"\n                  label=\"Date picker\"\n                  inputVariant=\"standard\"\n                  type=\"text\"\n                  autoOk={true}\n                  value={date}\n                  onChange={this.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              <TextValidator\n                className=\"mb-32 w-100\"\n                label=\"Credit Card\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"creditCard\"\n                value={creditCard}\n                validators={[\n                  \"required\",\n                  \"minStringLength:16\",\n                  \"maxStringLength: 16\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Mobile Nubmer\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"mobile\"\n                value={mobile}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Password\"\n                onChange={this.handleChange}\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Confirm Password\"\n                onChange={this.handleChange}\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                validators={[\"required\", \"isPasswordMatch\"]}\n                errorMessages={[\n                  \"this field is required\",\n                  \"password didn't match\"\n                ]}\n              />\n              <RadioGroup\n                className=\"mb-16\"\n                value={gender}\n                name=\"gender\"\n                onChange={this.handleChange}\n                row\n              >\n                <FormControlLabel\n                  value=\"Male\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Male\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Female\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Others\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Others\"\n                  labelPlacement=\"end\"\n                />\n              </RadioGroup>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"I have read and agree to the terms of service.\"\n              />\n            </Grid>\n          </Grid>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            <Icon>send</Icon>\n            <span className=\"pl-8 capitalize\">Send</span>\n          </Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default SimpleForm;\n"]},"metadata":{},"sourceType":"module"}