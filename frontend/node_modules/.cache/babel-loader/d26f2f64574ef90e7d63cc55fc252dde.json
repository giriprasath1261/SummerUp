{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/giriprasath/Downloads/matx-react/matx-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"/home/giriprasath/Downloads/matx-react/matx-react/src/matx/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx\";\nimport React, { Component } from \"react\";\nimport { withStyles, Icon } from \"@material-ui/core\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router-dom\";\nimport { classList } from 'utils';\n\nconst styles = theme => {\n  return {\n    expandIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(90deg)\" // marginRight: \"16px\"\n\n    },\n    collapseIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(0deg)\" // marginRight: \"16px\"\n\n    },\n    \"expansion-panel\": {\n      overflow: \"hidden\",\n      transition: \"max-height 0.3s cubic-bezier(0, 0, 0.2, 1)\"\n    },\n    highlight: {\n      background: theme.palette.primary.main\n    }\n  };\n};\n\nclass MatxVerticalNavExpansionPanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: true\n    };\n    this.elementRef = React.createRef();\n    this.componentHeight = 0;\n\n    this.handleClick = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n  }\n\n  calcaulateHeight(node) {\n    if (node.name !== \"child\") {\n      var _iterator = _createForOfIteratorHelper(node.children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          let child = _step.value;\n          this.calcaulateHeight(child);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    this.componentHeight += node.clientHeight;\n    return;\n  }\n\n  componentDidMount() {\n    let location = this.props.location;\n    this.calcaulateHeight(this.elementRef); // OPEN DROPDOWN IF CHILD IS ACTIVE\n\n    var _iterator2 = _createForOfIteratorHelper(this.elementRef.children),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        let child = _step2.value;\n\n        if (child.getAttribute(\"href\") === location.pathname) {\n          this.setState({\n            collapsed: false\n          });\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  render() {\n    let collapsed = this.state.collapsed;\n    let _this$props = this.props,\n        classes = _this$props.classes,\n        children = _this$props.children;\n    let _this$props$item = this.props.item,\n        name = _this$props$item.name,\n        icon = _this$props$item.icon,\n        badge = _this$props$item.badge;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TouchRipple, {\n      className: classList({\n        \"nav-item flex-middle h-48 w-100 has-submenu\": true,\n        \"open\": !collapsed\n      }),\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-middle item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, icon), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-middle pl-20 item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, name)), badge && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge bg-\".concat(badge.color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, badge.value), /*#__PURE__*/React.createElement(\"div\", {\n      className: collapsed ? classes.collapseIcon + \" item-arrow\" : classes.expandIcon + \" item-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"chevron_right\"))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.elementRef = el,\n      className: classes[\"expansion-panel\"] + \" submenu\",\n      style: collapsed ? {\n        maxHeight: \"0px\"\n      } : {\n        maxHeight: this.componentHeight + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n}\n\nexport default withRouter(withStyles(styles)(MatxVerticalNavExpansionPanel));","map":{"version":3,"sources":["/home/giriprasath/Downloads/matx-react/matx-react/src/matx/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx"],"names":["React","Component","withStyles","Icon","TouchRipple","withRouter","classList","styles","theme","expandIcon","transition","transform","collapseIcon","overflow","highlight","background","palette","primary","main","MatxVerticalNavExpansionPanel","state","collapsed","elementRef","createRef","componentHeight","handleClick","setState","calcaulateHeight","node","name","children","child","clientHeight","componentDidMount","location","props","getAttribute","pathname","render","classes","item","icon","badge","color","value","el","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles, Icon } from \"@material-ui/core\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router-dom\";\nimport { classList } from 'utils';\n\nconst styles = theme => {\n  return {\n    expandIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(90deg)\"\n      // marginRight: \"16px\"\n    },\n    collapseIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(0deg)\"\n      // marginRight: \"16px\"\n    },\n    \"expansion-panel\": {\n      overflow: \"hidden\",\n      transition: \"max-height 0.3s cubic-bezier(0, 0, 0.2, 1)\"\n    },\n    highlight: {\n      background: theme.palette.primary.main\n    }\n  };\n};\n\nclass MatxVerticalNavExpansionPanel extends Component {\n  state = {\n    collapsed: true\n  };\n  elementRef = React.createRef();\n\n  componentHeight = 0;\n\n  handleClick = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  calcaulateHeight(node) {\n    if (node.name !== \"child\") {\n      for (let child of node.children) {\n        this.calcaulateHeight(child);\n      }\n    }\n    this.componentHeight += node.clientHeight;\n    return;\n  }\n  componentDidMount() {\n    let { location } = this.props;\n    this.calcaulateHeight(this.elementRef);\n\n    // OPEN DROPDOWN IF CHILD IS ACTIVE\n    for (let child of this.elementRef.children) {\n      if (child.getAttribute(\"href\") === location.pathname) {\n        this.setState({ collapsed: false });\n      }\n    }\n  }\n  render() {\n    let { collapsed } = this.state;\n    let { classes, children } = this.props;\n    let { name, icon, badge } = this.props.item;\n    return (\n      <div>\n        <TouchRipple\n          className={classList({\n            \"nav-item flex-middle h-48 w-100 has-submenu\": true,\n            \"open\": !collapsed\n          })}\n          onClick={this.handleClick}\n        >\n          <div>\n            <Icon className=\"text-middle item-icon\">{icon}</Icon>\n            <span className=\"text-middle pl-20 item-text\">{name}</span>\n          </div>\n          {badge && (\n            <div className={`badge bg-${badge.color}`}>{badge.value}</div>\n          )}\n          <div\n            className={\n              collapsed\n                ? classes.collapseIcon + \" item-arrow\"\n                : classes.expandIcon + \" item-arrow\"\n            }\n          >\n            <Icon className=\"text-middle\">chevron_right</Icon>\n          </div>\n        </TouchRipple>\n\n        <div\n          ref={el => (this.elementRef = el)}\n          className={classes[\"expansion-panel\"] + \" submenu\"}\n          style={\n            collapsed\n              ? { maxHeight: \"0px\" }\n              : { maxHeight: this.componentHeight + \"px\" }\n          }\n        >\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(MatxVerticalNavExpansionPanel));\n"]},"metadata":{},"sourceType":"module"}