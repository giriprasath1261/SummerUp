{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMuiClasses = exports.capitalise = exports.getTransitionDirection = exports.muiClasses = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _constants = require('../utils/constants');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DIRECTION = {\n  right: 'left',\n  left: 'right',\n  bottom: 'up',\n  top: 'down'\n};\nvar muiClasses = exports.muiClasses = {\n  root: {},\n  anchorOriginTopCenter: {},\n  anchorOriginBottomCenter: {},\n  anchorOriginTopRight: {},\n  anchorOriginBottomRight: {},\n  anchorOriginTopLeft: {},\n  anchorOriginBottomLeft: {}\n};\n/**\n * returns transition direction according the the given anchor origin\n * @param {object} anchorOrigin\n */\n\nvar getTransitionDirection = exports.getTransitionDirection = function getTransitionDirection() {\n  var anchorOrigin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constants.defaultAnchorOrigin;\n\n  if (anchorOrigin.horizontal !== 'center') {\n    return DIRECTION[anchorOrigin.horizontal];\n  }\n\n  return DIRECTION[anchorOrigin.vertical];\n};\n/**\n * Capitalises a piece of string\n * @param {string} text\n */\n\n\nvar capitalise = exports.capitalise = function capitalise(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n/**\n * Filteres classes object and returns the keys that are allowed\n * in material-ui snackbar classes prop\n * @param {object} classes\n */\n\n\nvar getMuiClasses = exports.getMuiClasses = function getMuiClasses(classes) {\n  return Object.keys(classes).filter(function (key) {\n    return muiClasses[key] !== undefined;\n  }).reduce(function (obj, key) {\n    return _extends({}, obj, _defineProperty({}, key, classes[key]));\n  }, {});\n};","map":null,"metadata":{},"sourceType":"script"}